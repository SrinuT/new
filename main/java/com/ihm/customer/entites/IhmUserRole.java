package com.ihm.customer.entites;

// Generated 30 Jan, 2015 2:34:08 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

/**
 * IhmUserRole generated by hbm2java
 */
@Entity
@Table(name = "ihm_user_role")
public class IhmUserRole implements java.io.Serializable {

	private long id;
	private Integer version;
	private String code;
	private String createdBy;
	private Date createdOn;
	private String description;
	private String disableFlg;
	private String updatedBy;
	private Date updatedOn;
	private Set<UserProfile> userProfiles = new HashSet<UserProfile>(0);

	public IhmUserRole() {
	}

	public IhmUserRole(long id) {
		this.id = id;
	}

	public IhmUserRole(long id, String code, String createdBy, Date createdOn,
			String description, String disableFlg, String updatedBy,
			Date updatedOn, Set<UserProfile> userProfiles) {
		this.id = id;
		this.code = code;
		this.createdBy = createdBy;
		this.createdOn = createdOn;
		this.description = description;
		this.disableFlg = disableFlg;
		this.updatedBy = updatedBy;
		this.updatedOn = updatedOn;
		this.userProfiles = userProfiles;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@Version
	@Column(name = "version")
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@Column(name = "code")
	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@Column(name = "created_by")
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_on", length = 19)
	public Date getCreatedOn() {
		return this.createdOn;
	}

	public void setCreatedOn(Date createdOn) {
		this.createdOn = createdOn;
	}

	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "disable_flg")
	public String getDisableFlg() {
		return this.disableFlg;
	}

	public void setDisableFlg(String disableFlg) {
		this.disableFlg = disableFlg;
	}

	@Column(name = "updated_by")
	public String getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(String updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_on", length = 19)
	public Date getUpdatedOn() {
		return this.updatedOn;
	}

	public void setUpdatedOn(Date updatedOn) {
		this.updatedOn = updatedOn;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "ihm_user_role_xref", joinColumns = { @JoinColumn(name = "role_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "user_id", nullable = false, updatable = false) })
	public Set<UserProfile> getUserProfiles() {
		return this.userProfiles;
	}

	public void setUserProfiles(Set<UserProfile> userProfiles) {
		this.userProfiles = userProfiles;
	}

}
