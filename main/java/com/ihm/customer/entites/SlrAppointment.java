package com.ihm.customer.entites;

// Generated 24 Jan, 2015 3:46:22 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

/**
 * SlrAppointment generated by hbm2java
 */
@Entity
@Table(name = "slr_appointment")
public class SlrAppointment implements java.io.Serializable {

	private long id;
	private Integer version;
	private boolean active;
	private String createdBy;
	private Date createdOn;
	private Double duration;
	private Date endTime;
	private String serviceDay;
	private Date startTime;
	private String updatedBy;
	private Date updatedOn;
	
	private SlrSeller slrSeller;
	private Set<SlrAppointmentSlots> slrAppointmentSlotses = new HashSet<SlrAppointmentSlots>(0);

	public SlrAppointment() {
	}

	public SlrAppointment(long id, boolean active) {
		this.id = id;
		this.active = active;
	}

	public SlrAppointment(long id, SlrSeller slrSeller, boolean active,
			String createdBy, Date createdOn, Double duration, Date endTime,
			String serviceDay, Date startTime, String updatedBy,
			Date updatedOn, Set<SlrAppointmentSlots> slrAppointmentSlotses) {
		this.id = id;
		this.slrSeller = slrSeller;
		this.active = active;
		this.createdBy = createdBy;
		this.createdOn = createdOn;
		this.duration = duration;
		this.endTime = endTime;
		this.serviceDay = serviceDay;
		this.startTime = startTime;
		this.updatedBy = updatedBy;
		this.updatedOn = updatedOn;
		this.slrAppointmentSlotses = slrAppointmentSlotses;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@Version
	@Column(name = "version")
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "seller_id")
	public SlrSeller getSlrSeller() {
		return this.slrSeller;
	}

	public void setSlrSeller(SlrSeller slrSeller) {
		this.slrSeller = slrSeller;
	}

	@Column(name = "active", nullable = false)
	public boolean isActive() {
		return this.active;
	}

	public void setActive(boolean active) {
		this.active = active;
	}

	@Column(name = "created_by")
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_on", length = 19)
	public Date getCreatedOn() {
		return this.createdOn;
	}

	public void setCreatedOn(Date createdOn) {
		this.createdOn = createdOn;
	}

	@Column(name = "duration", precision = 22, scale = 0)
	public Double getDuration() {
		return this.duration;
	}

	public void setDuration(Double duration) {
		this.duration = duration;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "end_time", length = 19)
	public Date getEndTime() {
		return this.endTime;
	}

	public void setEndTime(Date endTime) {
		this.endTime = endTime;
	}

	@Column(name = "service_day")
	public String getServiceDay() {
		return this.serviceDay;
	}

	public void setServiceDay(String serviceDay) {
		this.serviceDay = serviceDay;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "start_time", length = 19)
	public Date getStartTime() {
		return this.startTime;
	}

	public void setStartTime(Date startTime) {
		this.startTime = startTime;
	}

	@Column(name = "updated_by")
	public String getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(String updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_on", length = 19)
	public Date getUpdatedOn() {
		return this.updatedOn;
	}

	public void setUpdatedOn(Date updatedOn) {
		this.updatedOn = updatedOn;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "slrAppointment")
	public Set<SlrAppointmentSlots> getSlrAppointmentSlotses() {
		return this.slrAppointmentSlotses;
	}

	public void setSlrAppointmentSlotses(
			Set<SlrAppointmentSlots> slrAppointmentSlotses) {
		this.slrAppointmentSlotses = slrAppointmentSlotses;
	}

}
