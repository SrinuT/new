package com.ihm.customer.entites;

// Generated 24 Jan, 2015 3:46:22 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import javax.persistence.*;

import static javax.persistence.GenerationType.AUTO;
import static javax.persistence.GenerationType.IDENTITY;

/**
 * SlrAppointmentBookings generated by hbm2java
 */
@Entity
@Table(name = "slr_appointment_bookings")
public class SlrAppointmentBookings implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 4874371725941515386L;
	
	
	private Long id;
	private Integer version;
	private Date apptDate;
	private Date apptTime;
	private String bookedFor;
	private Date bookedTime;
	private String bookingStatus;
	private String createdBy;
	private Date createdOn;
	private String updatedBy;
	private Date updatedOn;
	private String docName;
	private String refId;
	private String confirmationNumber;
	private Boolean paymentOnServiceCenter;
	private Boolean recieveOffers;
	private String email;
	
	private SlrSeller slrSeller;
	private SlrAppointmentSlots slrAppointmentSlots;
    private Person person;
    private GuestPerson guestPerson;
    private SlrProduct slrProduct;

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Version
	@Column(name = "version")
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "seller_id")
	public SlrSeller getSlrSeller() {
		return this.slrSeller;
	}

	public void setSlrSeller(SlrSeller slrSeller) {
		this.slrSeller = slrSeller;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "appt_slot_id")
	public SlrAppointmentSlots getSlrAppointmentSlots() {
		return this.slrAppointmentSlots;
	}

	public void setSlrAppointmentSlots(SlrAppointmentSlots slrAppointmentSlots) {
		this.slrAppointmentSlots = slrAppointmentSlots;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "appt_date", length = 19)
	public Date getApptDate() {
		return this.apptDate;
	}

	public void setApptDate(Date apptDate) {
		this.apptDate = apptDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "appt_time", length = 19)
	public Date getApptTime() {
		return this.apptTime;
	}

	public void setApptTime(Date apptTime) {
		this.apptTime = apptTime;
	}

	@Column(name = "booked_for")
	public String getBookedFor() {
		return this.bookedFor;
	}

	public void setBookedFor(String bookedFor) {
		this.bookedFor = bookedFor;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "booked_time", length = 19)
	public Date getBookedTime() {
		return this.bookedTime;
	}

	public void setBookedTime(Date bookedTime) {
		this.bookedTime = bookedTime;
	}

	@Column(name = "booking_status")
	public String getBookingStatus() {
		return this.bookingStatus;
	}

	public void setBookingStatus(String bookingStatus) {
		this.bookingStatus = bookingStatus;
	}

	@Column(name = "created_by")
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_on", length = 19)
	public Date getCreatedOn() {
		return this.createdOn;
	}

	public void setCreatedOn(Date createdOn) {
		this.createdOn = createdOn;
	}

	@Column(name = "updated_by")
	public String getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(String updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_on", length = 19)
	public Date getUpdatedOn() {
		return this.updatedOn;
	}

	public void setUpdatedOn(Date updatedOn) {
		this.updatedOn = updatedOn;
	}

	@Column(name = "doc_name")
	public String getDocName() {
		return this.docName;
	}

	public void setDocName(String docName) {
		this.docName = docName;
	}

	@Column(name = "ref_id")
	public String getRefId() {
		return this.refId;
	}

	public void setRefId(String refId) {
		this.refId = refId;
	}

	@Column(name = "confirmation_number")
	public String getConfirmationNumber() {
		return this.confirmationNumber;
	}

	public void setConfirmationNumber(String confirmationNumber) {
		this.confirmationNumber = confirmationNumber;
	}

	@Column(name = "payment_on_service_center")
	public Boolean getPaymentOnServiceCenter() {
		return this.paymentOnServiceCenter;
	}

	public void setPaymentOnServiceCenter(Boolean paymentOnServiceCenter) {
		this.paymentOnServiceCenter = paymentOnServiceCenter;
	}

	@Column(name = "recieve_offers")
	public Boolean getRecieveOffers() {
		return this.recieveOffers;
	}

	public void setRecieveOffers(Boolean recieveOffers) {
		this.recieveOffers = recieveOffers;
	}

	@Column(name = "email", length = 45)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "person_id")
    public Person getPerson() {
        return person;
    }

    public void setPerson(Person person) {
        this.person = person;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "guest_person_id")
    public GuestPerson getGuestPerson() {
        return guestPerson;
    }

    public void setGuestPerson(GuestPerson guestPerson) {
        this.guestPerson = guestPerson;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "product_id")
    public SlrProduct getSlrProduct() {
        return slrProduct;
    }

    public void setSlrProduct(SlrProduct slrProduct) {
        this.slrProduct = slrProduct;
    }
}
