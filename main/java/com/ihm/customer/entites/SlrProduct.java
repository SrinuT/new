package com.ihm.customer.entites;

// Generated 24 Jan, 2015 3:46:22 PM by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

import org.hibernate.annotations.BatchSize;
import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * SlrProduct generated by hbm2java
 */
@Entity
@Table(name = "slr_product")
public class SlrProduct implements java.io.Serializable {

	private long id;
	private Integer version;
	private Float avgStarRating;
	private String createdBy;
	private Date createdOn;
	private String longDescription;
	private String myCategory;
	private String name;
	private Float otherTax;
	private BigDecimal price;
	private String priceCurrencyCode;
	private String primaryImageUrl;
	private String productCode;
	private String secondaryImageUrl;
	private Float serviceTax;
	private String shortDescription;
	private String status;
	private String updatedBy;
	private Date updatedOn;
	private Float vatTax;
	private String videoUrl;
	private String seller_id;
	
	
	private SlrSeller slrSeller;
	private IhmCategories ihmCategories;
	
	private Set<SlrProductReview> slrProductReviews = new HashSet<SlrProductReview>(0);

	/*
	 * Not In Use
	 */
	private Set<SlrDeal> slrDeals = new HashSet<SlrDeal>(0);
	
	public SlrProduct() {
	}

	public SlrProduct(long id) {
		this.id = id;
	}


	@Id
	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@Version
	@Column(name = "version")
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "category_id")
	public IhmCategories getIhmCategories() {
		return this.ihmCategories;
	}

	public void setIhmCategories(IhmCategories ihmCategories) {
		this.ihmCategories = ihmCategories;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "seller_id")
	public SlrSeller getSlrSeller() {
		return this.slrSeller;
	}

	public void setSlrSeller(SlrSeller slrSeller) {
		this.slrSeller = slrSeller;
	}

	@Column(name = "avg_star_rating", precision = 12, scale = 0)
	public Float getAvgStarRating() {
		return this.avgStarRating;
	}

	public void setAvgStarRating(Float avgStarRating) {
		this.avgStarRating = avgStarRating;
	}

	@Column(name = "created_by")
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_on", length = 19)
	public Date getCreatedOn() {
		return this.createdOn;
	}

	public void setCreatedOn(Date createdOn) {
		this.createdOn = createdOn;
	}

	@Column(name = "long_description")
	public String getLongDescription() {
		return this.longDescription;
	}

	public void setLongDescription(String longDescription) {
		this.longDescription = longDescription;
	}

	@Column(name = "my_category")
	public String getMyCategory() {
		return this.myCategory;
	}

	public void setMyCategory(String myCategory) {
		this.myCategory = myCategory;
	}

	@Column(name = "name")
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "other_tax", precision = 12, scale = 0)
	public Float getOtherTax() {
		return this.otherTax;
	}

	public void setOtherTax(Float otherTax) {
		this.otherTax = otherTax;
	}

	@Column(name = "price")
	public BigDecimal getPrice() {
		return this.price;
	}

	public void setPrice(BigDecimal price) {
		this.price = price;
	}

	@Column(name = "price_currency_code")
	public String getPriceCurrencyCode() {
		return this.priceCurrencyCode;
	}

	public void setPriceCurrencyCode(String priceCurrencyCode) {
		this.priceCurrencyCode = priceCurrencyCode;
	}
	@Column(name = "primary_image_url")
	public String getPrimaryImageUrl() {
		return this.primaryImageUrl;
	}

	public void setPrimaryImageUrl(String primaryImageUrl) {
		this.primaryImageUrl = primaryImageUrl;
	}

	@Column(name = "product_code", unique = true)
	public String getProductCode() {
		return this.productCode;
	}

	public void setProductCode(String productCode) {
		this.productCode = productCode;
	}

	@Column(name = "secondary_image_url")
	public String getSecondaryImageUrl() {
		return this.secondaryImageUrl;
	}
	
	public void setSecondaryImageUrl(String secondaryImageUrl) {
		this.secondaryImageUrl = secondaryImageUrl;
	}
	
	@Column(name = "service_tax", precision = 12, scale = 0)
	public Float getServiceTax() {
		return this.serviceTax;
	}

	public void setServiceTax(Float serviceTax) {
		this.serviceTax = serviceTax;
	}

	@Column(name = "short_description")
	public String getShortDescription() {
		return this.shortDescription;
	}

	public void setShortDescription(String shortDescription) {
		this.shortDescription = shortDescription;
	}

	@Column(name = "status")
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}
	
	@Column(name = "updated_by")
	public String getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(String updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_on", length = 19)
	public Date getUpdatedOn() {
		return this.updatedOn;
	}

	public void setUpdatedOn(Date updatedOn) {
		this.updatedOn = updatedOn;
	}

	@Column(name = "vat_tax", precision = 12, scale = 0)
	public Float getVatTax() {
		return this.vatTax;
	}

	public void setVatTax(Float vatTax) {
		this.vatTax = vatTax;
	}

	@Column(name = "video_url")
	public String getVideoUrl() {
		return this.videoUrl;
	}

	public void setVideoUrl(String videoUrl) {
		this.videoUrl = videoUrl;
	}
	
	@Column(name = "seller_id", insertable=false, updatable=false)
	public String getSeller_id() {
		return seller_id;
	}

	public void setSeller_id(String seller_id) {
		this.seller_id = seller_id;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "slr_deal_product_xref", joinColumns = { @JoinColumn(name = "product_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "deal_id", nullable = false, updatable = false) })
	public Set<SlrDeal> getSlrDeals() {
		return this.slrDeals;
	}

	public void setSlrDeals(Set<SlrDeal> slrDeals) {
		this.slrDeals = slrDeals;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "slrProduct")
	@Cascade(CascadeType.ALL)
	@Fetch(FetchMode.SELECT)
    @BatchSize(size = 50)
	public Set<SlrProductReview> getSlrProductReviews() {
		return this.slrProductReviews;
	}


	public void setSlrProductReviews(Set<SlrProductReview> slrProductReviews) {
		this.slrProductReviews = slrProductReviews;
	}

}
