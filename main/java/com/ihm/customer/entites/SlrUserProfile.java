package com.ihm.customer.entites;

// Generated 30 Jan, 2015 2:34:08 PM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * SlrUserProfile generated by hbm2java
 */
@Entity
@Table(name = "slr_user_profile")
public class SlrUserProfile implements java.io.Serializable {

	private long id;
	private SlrUserAddress slrUserAddress;
	private SlrSeller slrSeller;
	private UserProfile userProfile;
	private SlrUserCredential slrUserCredential;
	private String licenseNumber;
	private String registrationNumber;
	private Set<SlrEducation> slrEducations = new HashSet<SlrEducation>(0);
	private Set<SlrCertification> slrCertifications = new HashSet<SlrCertification>(
			0);
	private Set<SlrSeller> slrSellers = new HashSet<SlrSeller>(0);
	private Set<SlrPractice> slrPractices = new HashSet<SlrPractice>(0);
	private Set<SlrAward> slrAwards = new HashSet<SlrAward>(0);

	public SlrUserProfile() {
	}

	public SlrUserProfile(UserProfile userProfile) {
		this.userProfile = userProfile;
	}

	public SlrUserProfile(SlrUserAddress slrUserAddress, SlrSeller slrSeller,
			UserProfile userProfile, SlrUserCredential slrUserCredential,
			String licenseNumber, String registrationNumber,
			Set<SlrEducation> slrEducations,
			Set<SlrCertification> slrCertifications, Set<SlrSeller> slrSellers,
			Set<SlrPractice> slrPractices, Set<SlrAward> slrAwards) {
		this.slrUserAddress = slrUserAddress;
		this.slrSeller = slrSeller;
		this.userProfile = userProfile;
		this.slrUserCredential = slrUserCredential;
		this.licenseNumber = licenseNumber;
		this.registrationNumber = registrationNumber;
		this.slrEducations = slrEducations;
		this.slrCertifications = slrCertifications;
		this.slrSellers = slrSellers;
		this.slrPractices = slrPractices;
		this.slrAwards = slrAwards;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "userProfile"))
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "address")
	public SlrUserAddress getSlrUserAddress() {
		return this.slrUserAddress;
	}

	public void setSlrUserAddress(SlrUserAddress slrUserAddress) {
		this.slrUserAddress = slrUserAddress;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "seller_info")
	public SlrSeller getSlrSeller() {
		return this.slrSeller;
	}

	public void setSlrSeller(SlrSeller slrSeller) {
		this.slrSeller = slrSeller;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public UserProfile getUserProfile() {
		return this.userProfile;
	}

	public void setUserProfile(UserProfile userProfile) {
		this.userProfile = userProfile;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "internal_user_id")
	public SlrUserCredential getSlrUserCredential() {
		return this.slrUserCredential;
	}

	public void setSlrUserCredential(SlrUserCredential slrUserCredential) {
		this.slrUserCredential = slrUserCredential;
	}

	@Column(name = "license_number")
	public String getLicenseNumber() {
		return this.licenseNumber;
	}

	public void setLicenseNumber(String licenseNumber) {
		this.licenseNumber = licenseNumber;
	}

	@Column(name = "registration_number")
	public String getRegistrationNumber() {
		return this.registrationNumber;
	}

	public void setRegistrationNumber(String registrationNumber) {
		this.registrationNumber = registrationNumber;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "slrUserProfile")
	public Set<SlrEducation> getSlrEducations() {
		return this.slrEducations;
	}

	public void setSlrEducations(Set<SlrEducation> slrEducations) {
		this.slrEducations = slrEducations;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "slrUserProfile")
	public Set<SlrCertification> getSlrCertifications() {
		return this.slrCertifications;
	}

	public void setSlrCertifications(Set<SlrCertification> slrCertifications) {
		this.slrCertifications = slrCertifications;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "slr_user_seller_xref", joinColumns = { @JoinColumn(name = "user_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "seller_id", nullable = false, updatable = false) })
	public Set<SlrSeller> getSlrSellers() {
		return this.slrSellers;
	}

	public void setSlrSellers(Set<SlrSeller> slrSellers) {
		this.slrSellers = slrSellers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "slrUserProfile")
	public Set<SlrPractice> getSlrPractices() {
		return this.slrPractices;
	}

	public void setSlrPractices(Set<SlrPractice> slrPractices) {
		this.slrPractices = slrPractices;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "slrUserProfile")
	public Set<SlrAward> getSlrAwards() {
		return this.slrAwards;
	}

	public void setSlrAwards(Set<SlrAward> slrAwards) {
		this.slrAwards = slrAwards;
	}

}
